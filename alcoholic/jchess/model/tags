!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
AlcHeader	../../jchess/util/AlcHeader.java	/^public class AlcHeader$/;"	c
BISHOP	../../jchess/core/Field.java	/^	public static final int BISHOP = 4;$/;"	f	class:Field
BLACK	../../jchess/core/Field.java	/^	public static final int BLACK = 8;$/;"	f	class:Field
BUFFER_LENGTH	../../jchess/model/ModelManager.java	/^	private static final int BUFFER_LENGTH = 64;$/;"	f	class:ModelManager	file:
BoardModel	../../jchess/model/BoardModel.java	/^	public BoardModel() {}$/;"	m	class:BoardModel
BoardModel	../../jchess/model/BoardModel.java	/^public class BoardModel$/;"	c
CLASS_PATH	../../jchess/Makefile	/^CLASS_PATH = ..\/..\/:lib\/jvm\/lwjgl.jar:lib\/jvm\/lwjgl_devil.jar:lib\/jvm\/lwjgl_fmod3.jar:lib\/jvm\/lwjgl_util.jar:lib\/jvm\/jinput.jar$/;"	m
CLASS_PATH	../../jchess/core/Makefile	/^CLASS_PATH = ..\/..\/..\/:..\/lib\/jvm\/lwjgl.jar:..\/lib\/jvm\/lwjgl_devil.jar:..\/lib\/jvm\/lwjgl_fmod3.jar:..\/lib\/jvm\/lwjgl_util.jar:lib\/jvm\/jinput.jar$/;"	m
CLASS_PATH	../../jchess/model/Makefile	/^CLASS_PATH = ..\/..\/..\/:..\/..\/lib\/jvm\/lwjgl.jar:..\/..\/lib\/jvm\/lwjgl_devil.jar:..\/..\/lib\/jvm\/lwjgl_fmod3.jar:..\/..\/lib\/jvm\/lwjgl_util.jar:lib\/jvm\/jinput.jar$/;"	m
CLASS_PATH	../../jchess/network/Makefile	/^CLASS_PATH = ..\/..\/..\/:..\/lib\/jvm\/lwjgl.jar:..\/lib\/jvm\/lwjgl_devil.jar:..\/lib\/jvm\/lwjgl_fmod3.jar:..\/lib\/jvm\/lwjgl_util.jar:lib\/jvm\/jinput.jar$/;"	m
CLASS_PATH	../../jchess/scene/Makefile	/^CLASS_PATH = ..\/..\/..\/:..\/lib\/jvm\/lwjgl.jar:..\/lib\/jvm\/lwjgl_devil.jar:..\/lib\/jvm\/lwjgl_fmod3.jar:..\/lib\/jvm\/lwjgl_util.jar:lib\/jvm\/jinput.jar$/;"	m
CLASS_PATH	../../jchess/util/Makefile	/^CLASS_PATH = ..\/..\/..\/:..\/lib\/jvm\/lwjgl.jar:..\/lib\/jvm\/lwjgl_devil.jar:..\/lib\/jvm\/lwjgl_fmod3.jar:..\/lib\/jvm\/lwjgl_util.jar:lib\/jvm\/jinput.jar$/;"	m
CameraManager	../../jchess/scene/CameraManager.java	/^	public CameraManager( boolean reverse )$/;"	m	class:CameraManager
CameraManager	../../jchess/scene/CameraManager.java	/^public class CameraManager$/;"	c
ClientManager	../../jchess/network/ClientManager.java	/^	public ClientManager( String pIpAddress ) $/;"	m	class:ClientManager
ClientManager	../../jchess/network/ClientManager.java	/^public class ClientManager implements NetworkManager, Runnable$/;"	c
DeselectionEvent	../../jchess/network/DeselectionEvent.java	/^	public DeselectionEvent() {}$/;"	m	class:DeselectionEvent
DeselectionEvent	../../jchess/network/DeselectionEvent.java	/^public class DeselectionEvent implements Event, Serializable$/;"	c
Djava.library.path	../../jchess/Makefile	/^	java -Djava.library.path=$(LIB_PATH) -cp $$CLASSPATH:$(CLASS_PATH) alcoholic.jchess.JChessDebug$/;"	m
EndGameEvent	../../jchess/network/EndGameEvent.java	/^	public EndGameEvent() {}$/;"	m	class:EndGameEvent
EndGameEvent	../../jchess/network/EndGameEvent.java	/^public class EndGameEvent implements Event, Serializable$/;"	c
Event	../../jchess/network/Event.java	/^public interface Event$/;"	i
Face	../../jchess/util/Face.java	/^	public Face(int pV1, int pV2, int pV3) $/;"	m	class:Face
Face	../../jchess/util/Face.java	/^public class Face $/;"	c
Field	../../jchess/core/Field.java	/^public final class Field implements Serializable, Cloneable$/;"	c
JChess	../../jchess/JChess.java	/^public class JChess$/;"	c
JChessDebug	../../jchess/JChessDebug.java	/^public class JChessDebug$/;"	c
JSRCS	../../jchess/core/Makefile	/^JSRCS = $(wildcard *.java)$/;"	m
JSRCS	../../jchess/model/Makefile	/^JSRCS = $(wildcard *.java)$/;"	m
JSRCS	../../jchess/network/Makefile	/^JSRCS = $(wildcard *.java)$/;"	m
JSRCS	../../jchess/scene/Makefile	/^JSRCS = $(wildcard *.java)$/;"	m
JSRCS	../../jchess/util/Makefile	/^JSRCS = $(wildcard *.java)$/;"	m
JSRCS1	../../jchess/Makefile	/^JSRCS1 = $(wildcard $(JSRCS1_PATH)\/*.java)$/;"	m
JSRCS1_PATH	../../jchess/Makefile	/^JSRCS1_PATH = core$/;"	m
JSRCS2	../../jchess/Makefile	/^JSRCS2 = $(wildcard $(JSRCS2_PATH)\/*.java)$/;"	m
JSRCS2_PATH	../../jchess/Makefile	/^JSRCS2_PATH = scene$/;"	m
JSRCS3	../../jchess/Makefile	/^JSRCS3 = $(wildcard $(JSRCS3_PATH)\/*.java)$/;"	m
JSRCS3_PATH	../../jchess/Makefile	/^JSRCS3_PATH = network$/;"	m
JSRCS4	../../jchess/Makefile	/^JSRCS4 = $(wildcard $(JSRCS4_PATH)\/*.java)$/;"	m
JSRCS4_PATH	../../jchess/Makefile	/^JSRCS4_PATH = model$/;"	m
KING	../../jchess/core/Field.java	/^	public static final int KING = 6;$/;"	f	class:Field
KNIGHT	../../jchess/core/Field.java	/^	public static final int KNIGHT = 3;$/;"	f	class:Field
LIB_PATH	../../jchess/Makefile	/^LIB_PATH = lib\/linux\/$/;"	m
LIB_PATH	../../jchess/core/Makefile	/^LIB_PATH = lib\/linux\/$/;"	m
LIB_PATH	../../jchess/model/Makefile	/^LIB_PATH = lib\/linux\/$/;"	m
LIB_PATH	../../jchess/network/Makefile	/^LIB_PATH = lib\/linux\/$/;"	m
LIB_PATH	../../jchess/scene/Makefile	/^LIB_PATH = lib\/linux\/$/;"	m
LIB_PATH	../../jchess/util/Makefile	/^LIB_PATH = lib\/linux\/$/;"	m
MAIN_SRC	../../jchess/Makefile	/^MAIN_SRC = JChess.java$/;"	m
MOUSE_LEFT_BUTTON	../../jchess/model/ModelManager.java	/^	private static final int MOUSE_LEFT_BUTTON = 0;$/;"	f	class:ModelManager	file:
MOUSE_LEFT_BUTTON	../../jchess/scene/CameraManager.java	/^	private static final int MOUSE_LEFT_BUTTON = 0;$/;"	f	class:CameraManager	file:
MOUSE_RIGHT_BUTTON	../../jchess/scene/CameraManager.java	/^	private static final int MOUSE_RIGHT_BUTTON = 1;$/;"	f	class:CameraManager	file:
MarkerModel	../../jchess/model/MarkerModel.java	/^	public MarkerModel() {}$/;"	m	class:MarkerModel
MarkerModel	../../jchess/model/MarkerModel.java	/^public class MarkerModel$/;"	c
ModelLoader	../../jchess/model/ModelLoader.java	/^public class ModelLoader$/;"	c
ModelManager	../../jchess/model/ModelManager.java	/^	public ModelManager( boolean pServer, $/;"	m	class:ModelManager
ModelManager	../../jchess/model/ModelManager.java	/^public class ModelManager$/;"	c
MovementEvent	../../jchess/network/MovementEvent.java	/^	public MovementEvent( int pRow, int pCol )$/;"	m	class:MovementEvent
MovementEvent	../../jchess/network/MovementEvent.java	/^public class MovementEvent implements Event, Serializable$/;"	c
NONE	../../jchess/core/Field.java	/^	public static final int NONE = 0;$/;"	f	class:Field
NetworkManager	../../jchess/network/NetworkManager.java	/^public interface NetworkManager$/;"	i
PAWN	../../jchess/core/Field.java	/^	public static final int PAWN = 1;$/;"	f	class:Field
PORT_NUMBER	../../jchess/network/NetworkManager.java	/^	public static final int PORT_NUMBER = 45123;$/;"	f	interface:NetworkManager
QUEEN	../../jchess/core/Field.java	/^	public static final int QUEEN = 5;$/;"	f	class:Field
ROOK	../../jchess/core/Field.java	/^	public static final int ROOK = 2;$/;"	f	class:Field
START_X	../../jchess/model/BoardModel.java	/^	private static final float START_X = -3.5f * UNIT_OF_ROOM;$/;"	f	class:BoardModel	file:
START_X	../../jchess/model/ModelManager.java	/^	private static final float START_X = -3.5f * UNIT_OF_ROOM;$/;"	f	class:ModelManager	file:
START_Y	../../jchess/model/BoardModel.java	/^	private static final float START_Y = 3.5f * UNIT_OF_ROOM;$/;"	f	class:BoardModel	file:
START_Y	../../jchess/model/ModelManager.java	/^	private static final float START_Y = 3.5f * UNIT_OF_ROOM;$/;"	f	class:ModelManager	file:
SceneManager	../../jchess/scene/SceneManager.java	/^	public SceneManager()$/;"	m	class:SceneManager
SceneManager	../../jchess/scene/SceneManager.java	/^public class SceneManager $/;"	c
SelectionEvent	../../jchess/network/SelectionEvent.java	/^	public SelectionEvent( int pRow, int pCol )$/;"	m	class:SelectionEvent
SelectionEvent	../../jchess/network/SelectionEvent.java	/^public class SelectionEvent implements Event, Serializable$/;"	c
ServerManager	../../jchess/network/ServerManager.java	/^	public ServerManager( State pState )$/;"	m	class:ServerManager
ServerManager	../../jchess/network/ServerManager.java	/^public class ServerManager implements Runnable, NetworkManager$/;"	c
State	../../jchess/core/State.java	/^	public State()$/;"	m	class:State
State	../../jchess/core/State.java	/^public class State implements Serializable, Cloneable$/;"	c
TARGET	../../jchess/Makefile	/^TARGET = $(MAIN_SRC:.java=.class)$/;"	m
TARGET	../../jchess/core/Makefile	/^TARGET = $(JSRCS:.java=.class)$/;"	m
TARGET	../../jchess/model/Makefile	/^TARGET = $(JSRCS:.java=.class)$/;"	m
TARGET	../../jchess/network/Makefile	/^TARGET = $(JSRCS:.java=.class)$/;"	m
TARGET	../../jchess/scene/Makefile	/^TARGET = $(JSRCS:.java=.class)$/;"	m
TARGET	../../jchess/util/Makefile	/^TARGET = $(JSRCS:.java=.class)$/;"	m
UNIT_OF_ROOM	../../jchess/model/BoardModel.java	/^	private static final float UNIT_OF_ROOM = 2.0f;$/;"	f	class:BoardModel	file:
UNIT_OF_ROOM	../../jchess/model/ModelManager.java	/^	private static final float UNIT_OF_ROOM = 2.0f;$/;"	f	class:ModelManager	file:
WHITE	../../jchess/core/Field.java	/^	public static final int WHITE = 7;$/;"	f	class:Field
WindowManager	../../jchess/scene/WindowManager.java	/^	public WindowManager( boolean pServer, boolean pFullscreen )$/;"	m	class:WindowManager
WindowManager	../../jchess/scene/WindowManager.java	/^public class WindowManager$/;"	c
Xml2Alc	../../jchess/util/Xml2Alc.java	/^	public Xml2Alc() {}$/;"	m	class:Xml2Alc
Xml2Alc	../../jchess/util/Xml2Alc.java	/^public class Xml2Alc$/;"	c
alcHeader	../../jchess/model/ModelLoader.java	/^	private AlcHeader alcHeader  =  new AlcHeader();$/;"	f	class:ModelLoader	file:
alcHeader	../../jchess/util/Xml2Alc.java	/^	AlcHeader alcHeader = new AlcHeader();$/;"	f	class:Xml2Alc
alcoholic.jchess	../../jchess/JChess.java	/^package alcoholic.jchess;$/;"	p
alcoholic.jchess	../../jchess/JChessDebug.java	/^package alcoholic.jchess;$/;"	p
alcoholic.jchess.core	../../jchess/core/Field.java	/^package alcoholic.jchess.core;$/;"	p
alcoholic.jchess.core	../../jchess/core/State.java	/^package alcoholic.jchess.core;$/;"	p
alcoholic.jchess.model	../../jchess/model/BoardModel.java	/^package alcoholic.jchess.model;$/;"	p
alcoholic.jchess.model	../../jchess/model/MarkerModel.java	/^package alcoholic.jchess.model;$/;"	p
alcoholic.jchess.model	../../jchess/model/ModelLoader.java	/^package alcoholic.jchess.model;$/;"	p
alcoholic.jchess.model	../../jchess/model/ModelManager.java	/^package alcoholic.jchess.model;$/;"	p
alcoholic.jchess.network	../../jchess/network/ClientManager.java	/^package alcoholic.jchess.network;$/;"	p
alcoholic.jchess.network	../../jchess/network/DeselectionEvent.java	/^package alcoholic.jchess.network;$/;"	p
alcoholic.jchess.network	../../jchess/network/EndGameEvent.java	/^package alcoholic.jchess.network;$/;"	p
alcoholic.jchess.network	../../jchess/network/Event.java	/^package alcoholic.jchess.network;$/;"	p
alcoholic.jchess.network	../../jchess/network/MovementEvent.java	/^package alcoholic.jchess.network;$/;"	p
alcoholic.jchess.network	../../jchess/network/NetworkManager.java	/^package alcoholic.jchess.network;$/;"	p
alcoholic.jchess.network	../../jchess/network/SelectionEvent.java	/^package alcoholic.jchess.network;$/;"	p
alcoholic.jchess.network	../../jchess/network/ServerManager.java	/^package alcoholic.jchess.network;$/;"	p
alcoholic.jchess.scene	../../jchess/scene/CameraManager.java	/^package alcoholic.jchess.scene;$/;"	p
alcoholic.jchess.scene	../../jchess/scene/SceneManager.java	/^package alcoholic.jchess.scene;$/;"	p
alcoholic.jchess.scene	../../jchess/scene/WindowManager.java	/^package alcoholic.jchess.scene;$/;"	p
alcoholic.jchess.util	../../jchess/util/AlcHeader.java	/^package alcoholic.jchess.util;$/;"	p
alcoholic.jchess.util	../../jchess/util/Face.java	/^package alcoholic.jchess.util;$/;"	p
alcoholic.jchess.util	../../jchess/util/Xml2Alc.java	/^package alcoholic.jchess.util;$/;"	p
begin	../../jchess/scene/SceneManager.java	/^	public void begin()$/;"	m	class:SceneManager
blackDead	../../jchess/core/State.java	/^	private int[] blackDead = new int[16];$/;"	f	class:State	file:
blackDeadCnt	../../jchess/core/State.java	/^	private int blackDeadCnt;$/;"	f	class:State	file:
blackKingCol	../../jchess/core/State.java	/^	private int blackKingCol;$/;"	f	class:State	file:
blackKingRow	../../jchess/core/State.java	/^	private int blackKingRow;$/;"	f	class:State	file:
blackSpecialMove	../../jchess/core/State.java	/^	private boolean blackSpecialMove;$/;"	f	class:State	file:
board	../../jchess/model/ModelManager.java	/^	private BoardModel board;$/;"	f	class:ModelManager	file:
camera	../../jchess/model/ModelManager.java	/^	private CameraManager camera;$/;"	f	class:ModelManager	file:
checkMate	../../jchess/network/ClientManager.java	/^	boolean checkMate = false;$/;"	f	class:ClientManager
clearHighlight	../../jchess/core/State.java	/^	private void clearHighlight()$/;"	m	class:State	file:
clone	../../jchess/core/Field.java	/^	public Object clone() {$/;"	m	class:Field
clone	../../jchess/core/State.java	/^	public Object clone()$/;"	m	class:State
closeFiles	../../jchess/util/Xml2Alc.java	/^	public void closeFiles()$/;"	m	class:Xml2Alc
col	../../jchess/network/DeselectionEvent.java	/^	private int col;$/;"	f	class:DeselectionEvent	file:
col	../../jchess/network/MovementEvent.java	/^	private int col;$/;"	f	class:MovementEvent	file:
col	../../jchess/network/SelectionEvent.java	/^	private int col;$/;"	f	class:SelectionEvent	file:
color	../../jchess/core/Field.java	/^	public int color = NONE;$/;"	f	class:Field
copyField	../../jchess/core/State.java	/^	private Field[][] copyField( Field[][] pField )$/;"	m	class:State	file:
create	../../jchess/scene/WindowManager.java	/^	public void create()$/;"	m	class:WindowManager
currentCol	../../jchess/model/ModelManager.java	/^	private int currentCol;$/;"	f	class:ModelManager	file:
currentColor	../../jchess/core/State.java	/^	private int currentColor;$/;"	f	class:State	file:
currentRow	../../jchess/model/ModelManager.java	/^	private int currentRow;$/;"	f	class:ModelManager	file:
desc	../../jchess/util/AlcHeader.java	/^	public byte desc[] = new byte[32]; \/\/ char 'A' 'L' 'C'$/;"	f	class:AlcHeader
descNum	../../jchess/util/AlcHeader.java	/^	public int descNum = 0xC1;$/;"	f	class:AlcHeader
deselect	../../jchess/core/State.java	/^	public void deselect()$/;"	m	class:State
destroyWindow	../../jchess/scene/WindowManager.java	/^	public void destroyWindow()$/;"	m	class:WindowManager
displayMode	../../jchess/scene/WindowManager.java	/^	private DisplayMode displayMode;$/;"	f	class:WindowManager	file:
draw	../../jchess/model/BoardModel.java	/^	public void draw()$/;"	m	class:BoardModel
draw	../../jchess/model/MarkerModel.java	/^	public void draw()$/;"	m	class:MarkerModel
draw	../../jchess/model/ModelManager.java	/^	public void draw()$/;"	m	class:ModelManager
end	../../jchess/scene/SceneManager.java	/^	public void end()$/;"	m	class:SceneManager
faces	../../jchess/model/ModelLoader.java	/^	private Face[] faces;$/;"	f	class:ModelLoader	file:
faces	../../jchess/util/Xml2Alc.java	/^	ArrayList faces = new ArrayList();$/;"	f	class:Xml2Alc
field	../../jchess/core/State.java	/^	private Field[][] field = new Field[8][8];$/;"	f	class:State	file:
fullscreen	../../jchess/scene/WindowManager.java	/^	private boolean fullscreen;$/;"	f	class:WindowManager	file:
getBlackDead	../../jchess/core/State.java	/^	public int[] getBlackDead()$/;"	m	class:State
getBlackDeadCnt	../../jchess/core/State.java	/^	public int getBlackDeadCnt()$/;"	m	class:State
getField	../../jchess/core/State.java	/^	public Field[][] getField()$/;"	m	class:State
getLoser	../../jchess/core/State.java	/^	public int getLoser()$/;"	m	class:State
getSelectedCol	../../jchess/core/State.java	/^	public int getSelectedCol()$/;"	m	class:State
getSelectedKind	../../jchess/core/State.java	/^	public int getSelectedKind()$/;"	m	class:State
getSelectedRow	../../jchess/core/State.java	/^	public int getSelectedRow()$/;"	m	class:State
getState	../../jchess/network/ClientManager.java	/^	public State getState()$/;"	m	class:ClientManager
getTurn	../../jchess/core/State.java	/^	public int getTurn()$/;"	m	class:State
getV1	../../jchess/util/Face.java	/^	public int getV1() {$/;"	m	class:Face
getV2	../../jchess/util/Face.java	/^	public int getV2() {$/;"	m	class:Face
getV3	../../jchess/util/Face.java	/^	public int getV3() {$/;"	m	class:Face
getWhiteDead	../../jchess/core/State.java	/^	public int[] getWhiteDead()$/;"	m	class:State
getWhiteDeadCnt	../../jchess/core/State.java	/^	public int getWhiteDeadCnt()$/;"	m	class:State
getXAngle	../../jchess/scene/CameraManager.java	/^	private float getXAngle()$/;"	m	class:CameraManager	file:
getXDistance	../../jchess/scene/CameraManager.java	/^	private float getXDistance()$/;"	m	class:CameraManager	file:
getYAngle	../../jchess/scene/CameraManager.java	/^	private float getYAngle()$/;"	m	class:CameraManager	file:
getYDistance	../../jchess/scene/CameraManager.java	/^	private float getYDistance()$/;"	m	class:CameraManager	file:
getZDistance	../../jchess/scene/CameraManager.java	/^	private float getZDistance()$/;"	m	class:CameraManager	file:
highlight	../../jchess/core/Field.java	/^	public boolean highlight = false;$/;"	f	class:Field
in	../../jchess/network/ClientManager.java	/^	private ObjectInputStream in;$/;"	f	class:ClientManager	file:
in	../../jchess/network/ServerManager.java	/^	private ObjectInputStream in;$/;"	f	class:ServerManager	file:
inFile	../../jchess/util/Xml2Alc.java	/^	BufferedReader inFile;$/;"	f	class:Xml2Alc
ipAddress	../../jchess/network/ClientManager.java	/^	private String ipAddress;$/;"	f	class:ClientManager	file:
isAvailableField	../../jchess/core/State.java	/^	private boolean isAvailableField( int pRow, int pCol )$/;"	m	class:State	file:
isAvailableSelection	../../jchess/core/State.java	/^	private boolean isAvailableSelection( int pRow, int pCol )$/;"	m	class:State	file:
isCheckMate	../../jchess/core/State.java	/^	public boolean isCheckMate()$/;"	m	class:State
isConnected	../../jchess/network/ClientManager.java	/^	public boolean isConnected()$/;"	m	class:ClientManager
isConnected	../../jchess/network/ServerManager.java	/^	public boolean isConnected()$/;"	m	class:ServerManager
isEnemyField	../../jchess/core/State.java	/^	private boolean isEnemyField( int pRow, int pCol )$/;"	m	class:State	file:
isHighlightOn	../../jchess/core/State.java	/^	private boolean isHighlightOn( int pRow, int pCol )$/;"	m	class:State	file:
isNoneField	../../jchess/core/State.java	/^	private boolean isNoneField( int pRow, int pCol )$/;"	m	class:State	file:
isOurField	../../jchess/core/State.java	/^	private boolean isOurField( int pRow, int pCol )$/;"	m	class:State	file:
isSelected	../../jchess/core/State.java	/^	public boolean isSelected()$/;"	m	class:State
kind	../../jchess/core/Field.java	/^	public int kind = NONE;$/;"	f	class:Field
lightPos	../../jchess/scene/SceneManager.java	/^	private FloatBuffer lightPos = BufferUtils.createFloatBuffer(4);$/;"	f	class:SceneManager	file:
listenEvent	../../jchess/model/ModelManager.java	/^	public void listenEvent()$/;"	m	class:ModelManager
listenEvent	../../jchess/scene/CameraManager.java	/^	public void listenEvent()$/;"	m	class:CameraManager
listenEvent	../../jchess/scene/WindowManager.java	/^	public void listenEvent()$/;"	m	class:WindowManager
load	../../jchess/model/BoardModel.java	/^	public void load( String pAlcFile, String pTexFile )$/;"	m	class:BoardModel
load	../../jchess/model/MarkerModel.java	/^	public void load( String pFileName )$/;"	m	class:MarkerModel
loadBoard	../../jchess/model/ModelLoader.java	/^	public int loadBoard( String pAlcFile, String pTexFile )$/;"	m	class:ModelLoader
loadMarker	../../jchess/model/ModelLoader.java	/^	public int loadMarker( String pFileName )$/;"	m	class:ModelLoader
loadVertices	../../jchess/model/ModelLoader.java	/^	private void loadVertices( String pFileName )$/;"	m	class:ModelLoader	file:
main	../../jchess/JChess.java	/^	public static void main( String[] args )$/;"	m	class:JChess
main	../../jchess/JChessDebug.java	/^	public static void main( String[] args )$/;"	m	class:JChessDebug
main	../../jchess/util/Xml2Alc.java	/^	public static void main(String[] args)$/;"	m	class:Xml2Alc
markers	../../jchess/model/ModelManager.java	/^	private MarkerModel[] markers;$/;"	f	class:ModelManager	file:
modelList	../../jchess/model/BoardModel.java	/^	private int modelList = -1;$/;"	f	class:BoardModel	file:
modelList	../../jchess/model/MarkerModel.java	/^	private int modelList = -1;$/;"	f	class:MarkerModel	file:
moveTo	../../jchess/core/State.java	/^	public boolean moveTo( int pRow, int pCol )$/;"	m	class:State
network	../../jchess/model/ModelManager.java	/^	private NetworkManager network;$/;"	f	class:ModelManager	file:
normals	../../jchess/model/ModelLoader.java	/^	private Vector3f[] normals;$/;"	f	class:ModelLoader	file:
numFaces	../../jchess/util/AlcHeader.java	/^	public int numFaces;$/;"	f	class:AlcHeader
numVertices	../../jchess/util/AlcHeader.java	/^	public int numVertices;$/;"	f	class:AlcHeader
offsetFaces	../../jchess/util/AlcHeader.java	/^	public int offsetFaces = 48;$/;"	f	class:AlcHeader
offsetVertices	../../jchess/util/AlcHeader.java	/^	public int offsetVertices;$/;"	f	class:AlcHeader
openFiles	../../jchess/util/Xml2Alc.java	/^	public void openFiles(String pFileName) $/;"	m	class:Xml2Alc
out	../../jchess/network/ClientManager.java	/^	private ObjectOutputStream out;$/;"	f	class:ClientManager	file:
out	../../jchess/network/ServerManager.java	/^	private ObjectOutputStream out;$/;"	f	class:ServerManager	file:
outFile	../../jchess/util/Xml2Alc.java	/^	RandomAccessFile outFile;$/;"	f	class:Xml2Alc
pass	../../jchess/core/State.java	/^	public void pass()$/;"	m	class:State
positions	../../jchess/model/ModelLoader.java	/^	private Vector3f[] positions;$/;"	f	class:ModelLoader	file:
printAll	../../jchess/core/State.java	/^	public void printAll()$/;"	m	class:State
process	../../jchess/network/DeselectionEvent.java	/^	public void process( State pState )$/;"	m	class:DeselectionEvent
process	../../jchess/network/EndGameEvent.java	/^	public void process( State pState ) {}$/;"	m	class:EndGameEvent
process	../../jchess/network/Event.java	/^	public void process( State pState );$/;"	m	interface:Event
process	../../jchess/network/MovementEvent.java	/^	public void process( State pState )$/;"	m	class:MovementEvent
process	../../jchess/network/SelectionEvent.java	/^	public void process( State pState )$/;"	m	class:SelectionEvent
processFile	../../jchess/util/Xml2Alc.java	/^	public void processFile()$/;"	m	class:Xml2Alc
processSelection	../../jchess/model/ModelManager.java	/^	private void processSelection( int pX, int pY )$/;"	m	class:ModelManager	file:
readFaces	../../jchess/util/Xml2Alc.java	/^	private void readFaces(char c) throws Exception$/;"	m	class:Xml2Alc	file:
readGeometry	../../jchess/util/Xml2Alc.java	/^	public void readGeometry(char c) throws Exception$/;"	m	class:Xml2Alc
readNormal	../../jchess/util/Xml2Alc.java	/^	public void readNormal(char c) throws Exception$/;"	m	class:Xml2Alc
readPosition	../../jchess/util/Xml2Alc.java	/^	private void readPosition(char c) throws Exception$/;"	m	class:Xml2Alc	file:
row	../../jchess/network/DeselectionEvent.java	/^	private int row;$/;"	f	class:DeselectionEvent	file:
row	../../jchess/network/MovementEvent.java	/^	private int row;$/;"	f	class:MovementEvent	file:
row	../../jchess/network/SelectionEvent.java	/^	private int row;$/;"	f	class:SelectionEvent	file:
run	../../jchess/network/ClientManager.java	/^	public void run()$/;"	m	class:ClientManager
run	../../jchess/network/ServerManager.java	/^	public void run()$/;"	m	class:ServerManager
select	../../jchess/core/State.java	/^	public boolean select( int pRow, int pCol )$/;"	m	class:State
selectedCol	../../jchess/core/State.java	/^	private int selectedCol;$/;"	f	class:State	file:
selectedRow	../../jchess/core/State.java	/^	private int selectedRow;$/;"	f	class:State	file:
selectionFlag	../../jchess/model/ModelManager.java	/^	private boolean selectionFlag = false;$/;"	f	class:ModelManager	file:
sendEvent	../../jchess/network/ClientManager.java	/^	public void sendEvent( Event pEvent )$/;"	m	class:ClientManager
sendState	../../jchess/network/ServerManager.java	/^	public void sendState()$/;"	m	class:ServerManager
server	../../jchess/model/ModelManager.java	/^	private boolean server;$/;"	f	class:ModelManager	file:
setBishopHighlightOn	../../jchess/core/State.java	/^	private void setBishopHighlightOn()$/;"	m	class:State	file:
setFullscreen	../../jchess/scene/WindowManager.java	/^	public void setFullscreen( boolean pFullscreen )$/;"	m	class:WindowManager
setHighlightOn	../../jchess/core/State.java	/^	private void setHighlightOn()$/;"	m	class:State	file:
setKingHighlightOn	../../jchess/core/State.java	/^	private void setKingHighlightOn()$/;"	m	class:State	file:
setKnightHighlightOn	../../jchess/core/State.java	/^	private void setKnightHighlightOn()$/;"	m	class:State	file:
setPawnHighlightOn	../../jchess/core/State.java	/^	private void setPawnHighlightOn()$/;"	m	class:State	file:
setQueenHighlightOn	../../jchess/core/State.java	/^	private void setQueenHighlightOn()$/;"	m	class:State	file:
setRookHighlightOn	../../jchess/core/State.java	/^	private void setRookHighlightOn()$/;"	m	class:State	file:
setState	../../jchess/model/ModelManager.java	/^	public void setState( State pState )$/;"	m	class:ModelManager
setXAngle	../../jchess/scene/CameraManager.java	/^	private void setXAngle( float pXAngle )$/;"	m	class:CameraManager	file:
setXDistance	../../jchess/scene/CameraManager.java	/^	private void setXDistance( float pXDistance )$/;"	m	class:CameraManager	file:
setYAngle	../../jchess/scene/CameraManager.java	/^	private void setYAngle( float pYAngle )$/;"	m	class:CameraManager	file:
setYDistance	../../jchess/scene/CameraManager.java	/^	private void setYDistance( float pYDistance )$/;"	m	class:CameraManager	file:
setZDistance	../../jchess/scene/CameraManager.java	/^	private void setZDistance( float pZDistance )$/;"	m	class:CameraManager	file:
setup	../../jchess/scene/CameraManager.java	/^	public void setup()$/;"	m	class:CameraManager
socket	../../jchess/network/ClientManager.java	/^	private Socket socket;$/;"	f	class:ClientManager	file:
socket	../../jchess/network/ServerManager.java	/^	private Socket socket;$/;"	f	class:ServerManager	file:
spotDirection	../../jchess/scene/SceneManager.java	/^	private FloatBuffer spotDirection = BufferUtils.createFloatBuffer(4);$/;"	f	class:SceneManager	file:
srvSocket	../../jchess/network/ServerManager.java	/^	private ServerSocket srvSocket;$/;"	f	class:ServerManager	file:
start	../../jchess/network/ClientManager.java	/^	public void start()$/;"	m	class:ClientManager
start	../../jchess/network/ServerManager.java	/^	public void start()$/;"	m	class:ServerManager
state	../../jchess/model/ModelManager.java	/^	private State state;$/;"	f	class:ModelManager	file:
state	../../jchess/network/ClientManager.java	/^	private State state;$/;"	f	class:ClientManager	file:
state	../../jchess/network/ServerManager.java	/^	private State state;$/;"	f	class:ServerManager	file:
state	../../jchess/util/Xml2Alc.java	/^	Statement state = Statement.START;$/;"	f	class:Xml2Alc
thread	../../jchess/network/ClientManager.java	/^	private Thread thread;$/;"	f	class:ClientManager	file:
thread	../../jchess/network/ServerManager.java	/^	private Thread thread;$/;"	f	class:ServerManager	file:
toggleFullscreen	../../jchess/scene/WindowManager.java	/^	public void toggleFullscreen()$/;"	m	class:WindowManager
v1	../../jchess/util/Face.java	/^	private int v1, v2, v3;$/;"	f	class:Face	file:
v2	../../jchess/util/Face.java	/^	private int v1, v2, v3;$/;"	f	class:Face	file:
v3	../../jchess/util/Face.java	/^	private int v1, v2, v3;$/;"	f	class:Face	file:
version	../../jchess/util/AlcHeader.java	/^	public int version = 1;$/;"	f	class:AlcHeader
vertices	../../jchess/util/Xml2Alc.java	/^	ArrayList vertices = new ArrayList();$/;"	f	class:Xml2Alc
whiteDead	../../jchess/core/State.java	/^	private int[] whiteDead = new int[16];$/;"	f	class:State	file:
whiteDeadCnt	../../jchess/core/State.java	/^	private int whiteDeadCnt;$/;"	f	class:State	file:
whiteKingCol	../../jchess/core/State.java	/^	private int whiteKingCol;$/;"	f	class:State	file:
whiteKingRow	../../jchess/core/State.java	/^	private int whiteKingRow;$/;"	f	class:State	file:
whiteSpecialMove	../../jchess/core/State.java	/^	private boolean whiteSpecialMove;$/;"	f	class:State	file:
windowTitle	../../jchess/scene/WindowManager.java	/^	private String windowTitle;$/;"	f	class:WindowManager	file:
writeFile	../../jchess/util/Xml2Alc.java	/^	private void writeFile() throws Exception$/;"	m	class:Xml2Alc	file:
x	../../jchess/scene/CameraManager.java	/^	private int x;$/;"	f	class:CameraManager	file:
xAngle	../../jchess/scene/CameraManager.java	/^	private float xAngle = 45.0f;$/;"	f	class:CameraManager	file:
xDistance	../../jchess/scene/CameraManager.java	/^	private float xDistance = 0.0f;$/;"	f	class:CameraManager	file:
y	../../jchess/scene/CameraManager.java	/^	private int y;$/;"	f	class:CameraManager	file:
yAngle	../../jchess/scene/CameraManager.java	/^	private float yAngle = 0.0f;$/;"	f	class:CameraManager	file:
yDistance	../../jchess/scene/CameraManager.java	/^	private float yDistance = 1.0f;$/;"	f	class:CameraManager	file:
z	../../jchess/scene/CameraManager.java	/^	private int z;$/;"	f	class:CameraManager	file:
zDistance	../../jchess/scene/CameraManager.java	/^	private float zDistance = -25.0f;$/;"	f	class:CameraManager	file:
